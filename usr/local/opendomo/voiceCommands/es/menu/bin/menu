#!/bin/bash
read ESPEAK < /etc/opendomo/speech/espeak.dat
read menu < /usr/local/opendomo/vr/MENU
if [ "$1" = "0" ]
then
	# This option, restarts MENU, to the first level	
	/usr/local/opendomo/vr/espeak.sh Menu0
	echo "menu0" > /usr/local/opendomo/vr/MENU
elif [ "$1" = "21" ]
then
	#21 ==> Salir del modo menú
	/usr/local/opendomo/vr/espeak.sh Menusalir
	echo "no" > /usr/local/opendomo/vr/MENU
elif [ "$1" = "20" ]
then
	#20 ==> Volver al menu anterior.
	# Por reagrupación de codige mejor tratarlo junto
	case "$menu" in
	menu0)
		#20 ==> Volver. En este caso, como estamos en el Menu principal (Menu0) repetimos el mismo Menu0
		/usr/local/opendomo/vr/espeak.sh Menu0
		echo "menu0" > /usr/local/opendomo/vr/MENU
		;;
	menu1|menu2|menu3)	
		#20 ==> Volver
		/usr/local/opendomo/vr/espeak.sh Menu0
		echo "menu0" > /usr/local/opendomo/vr/MENU
		;;		
	menu11|menu12)
		#20 ==> Volver
		/usr/local/opendomo/vr/espeak.sh Menu1e
		echo "menu1" > /usr/local/opendomo/vr/MENU
		;;
	menu3x)
		#20 ==> Volver
		$ESPEAK < /etc/opendomo/speech/configmenu.txt
		echo "menu3" > /usr/local/opendomo/vr/MENU
		;;
	menu111|menu112|menu113|menu114|menu115|menu116|menu117)
		# This option, restarts MENU, to the previous level	
		/usr/local/opendomo/vr/espeak.sh Menu11e
		echo "menu11" > /usr/local/opendomo/vr/MENU
		;;
	esac


else
	
	#Clean posible "opción" prefix
	par1=`echo $1 |cut -d " " -f1 -`
	if [ "$par1" = "opción" ]
	then
		p1=`echo $1 |cut -d " " -f2 -`
	else
		p1=`echo $1 |cut -d " " -f1 -`
	fi
	case "$menu" in
	no)
		/usr/local/opendomo/vr/espeak.sh MenuNo
		;;	
	menu0)
		case "$p1" in
			1)
			/usr/local/opendomo/vr/espeak.sh Menu1e
			echo "menu1" > /usr/local/opendomo/vr/MENU 
			;;
			2)
			/usr/local/opendomo/vr/espeak.sh Menu2e
			echo "menu2" > /usr/local/opendomo/vr/MENU
			;; 
			3)
			$ESPEAK < /etc/opendomo/speech/configmenu.txt
			echo "menu3" > /usr/local/opendomo/vr/MENU
			;;
			else)
			#Opción no válida. Repetir opciones de menu, y quedarse en el mismo estado
			/usr/local/opendomo/vr/espeak.sh Menunoval Menu0
			;;   
		esac
		;;
	menu1)
		case "$p1" in
			1)
			#Listar controladores
			# Agrupar controladores por tipo, de acuerdo a lo que hay en AYUDA
			/usr/local/opendomo/vr/espeak.sh Menu11e
			echo "menu11" > /usr/local/opendomo/vr/MENU
			;; 
			2)
			#Cambiar estado
			#Preguntar estado  y acabar
			/usr/local/opendomo/vr/espeak.sh Menu12e
			echo "menu12" > /usr/local/opendomo/vr/MENU
			;; 

			else)
			#Opción no válida. Repetir opciones de menu, y quedarse en el mismo estado
			/usr/local/opendomo/vr/espeak.sh Menunoval Menu1e
			;;   

		esac
		;;
	menu3)
		#get the script to be run:
		line=`grep -m 1 $p1 /etc/opendomo/speech/CONFIG`
		script=`echo -n $line | cut -d":" -f2 `
		
		case "$script" in
			about.sh)
				/usr/local/opendomo/services/config/about.sh > tmp.txt
				echo "Informacion de instalacion OpenDomo" > about.txt
				version=`grep INF tmp.txt |  cut -d ":" -f2 -`
				echo "version  de OpenDomo " $version >> about.txt
				kernel=`grep kernel tmp.txt | awk '{ print $5}'`
				echo -n "Version del kernel " >> about.txt
				echo $kernel >> about.txt
				echo " Paquetes instalados " >> about.txt
				for plugin in `grep version tmp.txt | cut -f1 -d.`
				do
        				echo $plugin >> about.txt
				done
				$ESPEAK < about.txt
				rm about.txt
				rm tmp.txt
				;;			
			reboot.sh)
				$ESPEAK " Rearrancando el sistema "
				/usr/local/opendomo/services/config/reboot.sh > reboot.txt
				;;
			manageConfiguration.sh)
				echo "menu3x" > /usr/local/opendomo/vr/MENU
				/usr/local/opendomo/vr/espeak.sh Menuconfigsave
				;;
			configureVoiceSystem.sh)
				echo "menu3x" > /usr/local/opendomo/vr/MENU
				read IDIOMA < /etc/opendomo/lang
				cd /usr/local/opendomo/vr/characters/$IDIOMA
				echo "Configuracion de reconocimiento de voz " > tmp.txt
				echo "Seleccione a continuacion el personaje que desea" >> tmp.txt
						
				for voz in `ls | cut -f1 -d. |uniq `  
				do	
					echo -n " Para configurar voz de " >> tmp.txt
					echo -n $voz >> tmp.txt
					echo -n " ,diga voz " >> tmp.txt
					echo $voz >> tmp.txt
				done
				$ESPEAK < tmp.txt
				rm tmp.txt
				;;
			else)
				;;
		esac
		;;
	menu11)
		case "$p1" in
			1)
			#Luces
			# 
			$ESPEAK < /etc/opendomo/speech/lightmenu.txt
			echo "menu111" > /usr/local/opendomo/vr/MENU
			;; 
			2)
			#Clima
			# 
			$ESPEAK < /etc/opendomo/speech/climamenu.txt
			echo "menu112" > /usr/local/opendomo/vr/MENU
			;; 
			3)
			#Musica
			# 
			$ESPEAK < /etc/opendomo/speech/musicmenu.txt
			echo "menu113" > /usr/local/opendomo/vr/MENU
			;; 
			4)
			#VideoVigilancia
			# 
			$ESPEAK < /etc/opendomo/speech/videomenu.txt
			echo "menu114" > /usr/local/opendomo/vr/MENU
			;; 
			5)
			#Sensores
			# 
			$ESPEAK < /etc/opendomo/speech/sensorsmenu.txt
			echo "menu115" > /usr/local/opendomo/vr/MENU
			;; 
			6)
			#Termostatos
			# 
			$ESPEAK < /etc/opendomo/speech/varclimatemenu.txt
			echo "menu116" > /usr/local/opendomo/vr/MENU
			;; 
			7)
			#Reguladores de Luz
			# 
			$ESPEAK < /etc/opendomo/speech/varlightmenu.txt
			echo "menu117" > /usr/local/opendomo/vr/MENU
			;; 

			else)
			#Opción no válida. Repetir opciones de menu, y quedarse en el mismo estado
			/usr/local/opendomo/vr/espeak.sh Menunoval Menu11e
			;;   

		esac
		;;
	menu12)
		case "$p1" in
			1)
			#Pasar a modo activo
			#
			/usr/local/opendomo/setSystemState.sh activ
			/usr/local/opendomo/vr/espeak.sh Menucambestactiv
			;; 
			2)
			#Pasar a modo vigilancia
			#
			/usr/local/opendomo/setSystemState.sh secured
			/usr/local/opendomo/vr/espeak.sh Menucambestvig
			;; 
			3)
			#Pasar a modo desactivado
			#Volver luego al menu anterior
			/usr/local/opendomo/setSystemState.sh sleeping
			/usr/local/opendomo/vr/espeak.sh Menucambestdesac
			;; 
		
			else)
			#Opción no válida. Repetir opciones de menu, y quedarse en el mismo estado
			/usr/local/opendomo/vr/espeak.sh Menunoval Menu12
			;;   

		esac
		;;
	menu3x)
		par1=`echo $1 |cut -d " " -f1 -`
		par2=`echo $1 |cut -d " " -f2 -`
		case "$par1" in
			salvar)
				case "$par2" in
					1)
					$ESPEAK " Salvando configuracion actual con plugins"
					echo "on" > /var/opendomo/tmp/savestatus
					/usr/local/opendomo/saveSystemConfiguration.sh
					;;
					2)
					$ESPEAK " Salvando configuracion actual sin plugins"
					echo "off" > /var/opendomo/tmp/savestatus
					/usr/local/opendomo/saveSystemConfiguration.sh
					;;	
					3)
					$ESPEAK " Salvando configuracion de defecto con plugins"
					echo "on" > /var/opendomo/tmp/savestatus
					/usr/local/opendomo/loadDefaultConfiguration.sh
					;;	
					4)
					$ESPEAK " Salvando configuracion de defecto sin plugins"
					echo "off" > /var/opendomo/tmp/savestatus
					/usr/local/opendomo/loadDefaultConfiguration.sh
					;;	
					else)
					;;
						
				esac
				;;
			voz)
				par2=${par2,,}				
				read IDIOMA < /etc/opendomo/lang
				cd /usr/local/opendomo/vr/characters/$IDIOMA				
				if [ `ls | grep -c $par2` -eq 1 ]
				then				
					/usr/local/opendomo/services/config/configureVoiceSystem.sh $par2
					$ESPEAK "Cambiada la voz del personaje a " $par2
				else

					echo "No existe el personaje " $par2 > tmp.txt
					echo "Seleccione a continuacion el personaje que desea" >> tmp.txt
						
					for voz in `ls | cut -f1 -d. |uniq `   
					do	
						echo -n " Para configurar voz de " >> tmp.txt
						echo -n $voz >> tmp.txt
						echo -n " ,diga voz " >> tmp.txt
						echo $voz >> tmp.txt
					done
					$ESPEAK < tmp.txt
					rm tmp.txt
				fi		
				;;
			else)
				;;
		esac	
		;;
	menu111)
		#Here, use original string($1).No "opcion" prefix in this case prefix is "activar/desactivar"
		#Fields <activar/desactivar> nrzone  
		par1=`echo $1 |cut -d " " -f1 -`
		par2=`echo $1 |cut -d " " -f2 -`	 
		zona=`grep $par2 /etc/opendomo/speech/lightmenu.txt |  cut -d " " -f1 -`
		if [ "$par1" = "activar" ]
		then
			/usr/local/opendomo/vr/Recognition/bin/LucesON $zona
		elif [ "$par1" = "desactivar" ]
		then
			/usr/local/opendomo/vr/Recognition/bin/LucesOFF $zona
		else
			/usr/local/opendomo/vr/espeak.sh MenuONOFF
		fi		
		;;
	menu112)
		#Here, use original string($1).No "opcion" prefix in this case prefix is "activar/desactivar"
		#Fields <activar/desactivar> nrzone  
		par1=`echo $1 |cut -d " " -f1 -`
		par2=`echo $1 |cut -d " " -f2 -`	 
		zona=`grep $par2 /etc/opendomo/speech/climamenu.txt |  cut -d " " -f1 -`
		if [ "$par1" = "activar" ]
		then
			/usr/local/opendomo/vr/Recognition/bin/ClimaON $zona
		elif [ "$par1" = "deactivar" ]
		then
			/usr/local/opendomo/vr/Recognition/bin/ClimaOFF $zona
		else
			/usr/local/opendomo/vr/espeak.sh MenuONOFF
		fi		
		;;
	menu113)
		#Here, use original string($1).No "opcion" prefix in this case prefix is "activar/desactivar"
		#Fields <activar/desactivar> nrzone  
		par1=`echo $1 |cut -d " " -f1 -`
		par2=`echo $1 |cut -d " " -f2 -`	 
		zona=`grep $par2 /etc/opendomo/speech/musicmenu.txt |  cut -d " " -f1 -`		

		if [ "$par1" = "activar" ]
		then
			/usr/local/opendomo/vr/Recognition/bin/MusicON $zona
		elif [ "$par1" = "desactivar" ]
		then
			/usr/local/opendomo/vr/Recognition/bin/MusicOFF $zona
		else
			/usr/local/opendomo/vr/espeak.sh MenuONOFF
		fi		
		;;
	menu114)
		#Here, use original string($1).No "opcion" prefix in this case prefix is "activar/desactivar"		
		#Fields <activar/desactivar> nrzone   
		par1=`echo $1 |cut -d " " -f1 -`
		par2=`echo $1 |cut -d " " -f2 -`	 
		zona=`grep $par2 /etc/opendomo/speech/videomenu.txt |  cut -d " " -f1 -`		 
	
		if [ "$par1" = "activar" ]
		then
			/usr/local/opendomo/vr/Recognition/bin/VideoON $zona
		elif [ "$par1" = "desactivar" ]
		then
			/usr/local/opendomo/vr/Recognition/bin/VideoOFF $zona
		else
			/usr/local/opendomo/vr/espeak.sh MenuONOFF
		fi		
		;;
	menu115)
		#Here, "opción" is applicable..., use $p1,filtered
		#Field nrsensor
		 zona=`grep $p1 /etc/opendomo/speech/sensorsmenu.txt |  cut -d " " -f1 -`
		/usr/local/opendomo/vr/Recognition/bin/Sensors $zona
		;;
	menu116)
		#Here, use original string($1)...No "opcion" as prefix in this case
		#Fields "value" nrzone value(ºC)  
		par1=`echo $1 |cut -d " " -f1 -`
		par2=`echo $1 |cut -d " " -f2 -`	 
		zona=`grep $par1 /etc/opendomo/speech/varclimatemenu.txt |  cut -d " " -f1 -`
		#VarClimate has 1 parameter with both parameters, separated by one space
		line=$zona" "$par2
		/usr/local/opendomo/vr/Recognition/bin/VarClimate $line
		;;
	menu117)
		#Here, use original string($1)...No "opcion" as prefix in this case
		#Fields "value" nrzone value(%)  
		par1=`echo $1 |cut -d " " -f1 -`
		par2=`echo $1 |cut -d " " -f2 -`	 
		zona=`grep $par1 /etc/opendomo/speech/varlightmenu.txt |  cut -d " " -f1 -`
		#VarClimate has 1 parameter with both parameters, separated by one space
		line=$zona" "$par2
		/usr/local/opendomo/vr/Recognition/bin/VarLight $line
		;;	 		 			 			 			 			 		 	
	esac
fi

